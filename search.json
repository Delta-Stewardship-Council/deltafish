[{"path":"https://delta-stewardship-council.github.io/deltafish/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 deltaFish authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jeanette Clark. Author. Samuel M Bashevkin. Author, maintainer.","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Clark J, Bashevkin SM. 2022. deltafish: R package access integrated dataset fish counts lengths San Francisco Estuary v0.1.0. Zenodo. doi:10.5281/zenodo.6484440 Bashevkin SM, Gaeta JW, Nguyen TX, Mitchell L, Khanna S. 2022. Fish abundance San Francisco Estuary (1959-2021), integration 9 monitoring surveys. ver 1. Environmental Data Initiative. doi:10.6073/pasta/0cdf7e5e954be1798ab9bf4f23816e83.","code":"@Article{,   title = {deltafish: an R package to access an integrated dataset of fish counts and lengths from the San Francisco Estuary v0.1.0},   author = {Jeanette Clark and Samuel M Bashevkin},   journal = {Zenodo},   year = {2022},   url = {https://zenodo.org/record/6484440},   doi = {10.5281/zenodo.6484440}, } @Article{,   title = {deltafish: an R package to access an integrated dataset of fish counts and lengths from the San Francisco Estuary v0.1.0},   author = {Samuel M Bashevkin and Jereme W Gaeta and Trinh X Nguyen and Lara Mitchell and Shruti Khanna},   journal = {Environmental Data Initiative},   year = {2022},   url = {https://doi.org/10.6073/pasta/0cdf7e5e954be1798ab9bf4f23816e83},   doi = {10.6073/pasta/0cdf7e5e954be1798ab9bf4f23816e83}, }"},{"path":"https://delta-stewardship-council.github.io/deltafish/index.html","id":"deltafish-","dir":"","previous_headings":"","what":"Accesses an Integrated Fish Count and Length Dataset from the San Francisco Delta","title":"Accesses an Integrated Fish Count and Length Dataset from the San Francisco Delta","text":"Credit Brian Mahardja Delta Smelt drawing logo. goal deltafish provide easy access integrated San Fransisco estuary Delta fish dataset. dataset published, citeable, documented EDI. dataset contains around 45 million rows, easily queryable normal R techniques. deltafish utilizes R implementation Apache Arrow parquet data format, along dbplyr make process working large dataset much easier standard computer. can use dplyr verbs query arrow dataset much way data.frame. Instead computing function return value every time execute dplyr function call, however, arrow builds query backend run collect() data. means execute far fewer queries able work data much efficiently. begin, install package run create_fish_db(). download data create arrow dataset.","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Accesses an Integrated Fish Count and Length Dataset from the San Francisco Delta","text":"can install package via github: via r-universe:","code":"devtools::install_github(\"Delta-Stewardship-Council/deltafish\") # Enable this universe options(repos = c(     sbashevkin = 'https://sbashevkin.r-universe.dev',     CRAN = 'https://cloud.r-project.org'))  # Install the package install.packages('deltafish')"},{"path":"https://delta-stewardship-council.github.io/deltafish/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Accesses an Integrated Fish Count and Length Dataset from the San Francisco Delta","text":"First build database. takes bit run since source data large. open query data.","code":"library(deltafish) create_fish_db() # dplyr required for queries below library(dplyr)  # open our two data files surv <- open_survey() fish <- open_fish()  # filter for sources and taxa of interest surv_FMWT <- surv %>%      filter(Source == \"FMWT\") %>%      select(SampleID, Date)  fish_smelt <- fish %>%      filter(Taxa %in% c(\"Dorosoma petenense\", \"Morone saxatilis\", \"Spirinchus thaleichthys\"))   # do a join and collect the resulting data frame # collect executes the sql query and gives you a table df <- left_join(surv_FMWT, fish_smelt) %>%      collect()"},{"path":"https://delta-stewardship-council.github.io/deltafish/index.html","id":"data-updating-and-versioning","dir":"","previous_headings":"","what":"Data updating and versioning","title":"Accesses an Integrated Fish Count and Length Dataset from the San Francisco Delta","text":"integrated dataset updated, need update installation deltafish package. Instead, can access latest data re-building cached database via , can specify exact version data package wish use. enables reproducibility ensuring correct data package version used. create fully reproducible workflow, also note deltafish package version used, always installed later e.g.,","code":"library(deltafish) create_fish_db(update=TRUE) library(deltafish) create_fish_db(edi_pid=\"edi.1075.1\") devtools::install_github(\"Delta-Stewardship-Council/deltafish\", ref=\"v0.2.0\")"},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/clear_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear cached deltafish files — clear_cache","title":"Clear cached deltafish files — clear_cache","text":"function removes cached files associated package","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/clear_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear cached deltafish files — clear_cache","text":"","code":"clear_cache()"},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/clear_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear cached deltafish files — clear_cache","text":"(NULL)","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/convert_lengths.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert fish length — convert_lengths","title":"Convert fish length — convert_lengths","text":"Converts fish length data using length conversion table. Returns arrow dataset. function needed convert Suisun survey data.","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/convert_lengths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert fish length — convert_lengths","text":"","code":"convert_lengths(data)"},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/convert_lengths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert fish length — convert_lengths","text":"data arrow dataset fish data. See open_fish()","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/convert_lengths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert fish length — convert_lengths","text":"data_conv arrow dataset converted lengths","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/convert_lengths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert fish length — convert_lengths","text":"","code":"if (FALSE) { library(dplyr)  fish <- open_fish() %>%      filter(Taxa %in% c(\"Dorosoma petenense\", \"Morone saxatilis\", \"Spirinchus thaleichthys\"))  fish_conv <- convert_lengths(fish) %>%      collect() }"},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/create_fish_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Create fish database — create_fish_db","title":"Create fish database — create_fish_db","text":"Function create arrow dataset. Reads raw data published EDI dataset.","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/create_fish_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create fish database — create_fish_db","text":"","code":"create_fish_db(edi_pid = NULL, update = FALSE, download_method = \"curl\")"},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/create_fish_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create fish database — create_fish_db","text":"edi_pid (char) Optionally, way specify specific revision dataset, format \"edi.1075.1\" Leave parameter unset get latest revision. update (logical) set TRUE, update latest version EDI newer version available download_method value method parameter download.file function.","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/deltafish-package.html","id":null,"dir":"Reference","previous_headings":"","what":"deltafish: Accesses an Integrated Fish Count and Length Dataset from the San Francisco Delta — deltafish-package","title":"deltafish: Accesses an Integrated Fish Count and Length Dataset from the San Francisco Delta — deltafish-package","text":"package enables streamlined access large (45 million observation) integrated fish dataset San Fransisco Delta. package downloads published data stores parquet files `arrow` dataset local cache. Helper functions enable efficient querying large dataset.","code":""},{"path":[]},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/deltafish-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"deltafish: Accesses an Integrated Fish Count and Length Dataset from the San Francisco Delta — deltafish-package","text":"Maintainer: Samuel M Bashevkin sam.bashevkin@waterboards.ca.gov (ORCID) Authors: Jeanette Clark jclark@nceas.ucsb.edu (ORCID)","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/is_cache_updated.html","id":null,"dir":"Reference","previous_headings":"","what":"Is cached data up to date with latest EDI data — is_cache_updated","title":"Is cached data up to date with latest EDI data — is_cache_updated","text":"Returns TRUE date, FALSE newer version exists","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/is_cache_updated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is cached data up to date with latest EDI data — is_cache_updated","text":"","code":"is_cache_updated(cache_dir = \"deltafish\")"},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/is_cache_updated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is cached data up to date with latest EDI data — is_cache_updated","text":"cache_dir (char) cache directory, default set deltafish use cases.","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/is_cache_updated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is cached data up to date with latest EDI data — is_cache_updated","text":"(logical) Whether cache date","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/open_fish.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect fish data — open_fish","title":"Connect fish data — open_fish","text":"Connect fish data stored package","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/open_fish.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect fish data — open_fish","text":"","code":"open_fish(quiet = FALSE)"},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/open_fish.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect fish data — open_fish","text":"quiet silence message fish length units.","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/open_fish.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect fish data — open_fish","text":"arrow object can treated like data.frame, fish data","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/open_length_conv.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect length conversion data — open_length_conv","title":"Connect length conversion data — open_length_conv","text":"Connect length conversion data stored package","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/open_length_conv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect length conversion data — open_length_conv","text":"","code":"open_length_conv()"},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/open_length_conv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect length conversion data — open_length_conv","text":"arrow object can treated like data.frame, length conversion data","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/open_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect survey data — open_survey","title":"Connect survey data — open_survey","text":"Connect survey data stored package","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/open_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect survey data — open_survey","text":"","code":"open_survey()"},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/open_survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect survey data — open_survey","text":"arrow object can treated like data.frame, survey data","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/remove_unknown_lengths.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove unknown fish lengths — remove_unknown_lengths","title":"Remove unknown fish lengths — remove_unknown_lengths","text":"Removes unknown fish lengths. Returns arrow dataset.","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/remove_unknown_lengths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove unknown fish lengths — remove_unknown_lengths","text":"","code":"remove_unknown_lengths(data, univariate)"},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/remove_unknown_lengths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove unknown fish lengths — remove_unknown_lengths","text":"data arrow dataset fish data. See open_fish() univariate (logical) data used univariate analyses (univariate=TRUE)? multi-species analyses (univariate=FALSE)? univariate, Length_NA_flag==\"Unknown length\" record found, records taxa sample removed. effect, transforming records missing data. univariate=FALSE, Length_NA_flag==\"Unknown length\" record found, entire sample removed 0s filled , since accurate community data confirmed sample.","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/remove_unknown_lengths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove unknown fish lengths — remove_unknown_lengths","text":"data_known arrow dataset known lenghts","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/show_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Show list of cached deltafish files — show_cache","title":"Show list of cached deltafish files — show_cache","text":"function returns list files cached package.","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/show_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show list of cached deltafish files — show_cache","text":"","code":"show_cache()"},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/show_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show list of cached deltafish files — show_cache","text":"(list) list files","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/show_cached_revision.html","id":null,"dir":"Reference","previous_headings":"","what":"Show revision number of cached files — show_cached_revision","title":"Show revision number of cached files — show_cached_revision","text":"function returns EDI revision number cached data.","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/show_cached_revision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show revision number of cached files — show_cached_revision","text":"","code":"show_cached_revision(cache_dir = \"deltafish\")"},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/show_cached_revision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show revision number of cached files — show_cached_revision","text":"cache_dir (char) cache directory, default set deltafish use cases.","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/reference/show_cached_revision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show revision number of cached files — show_cached_revision","text":"(char) revision number cache","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/news/index.html","id":"deltafish-development-version","dir":"Changelog","previous_headings":"","what":"deltafish (development version)","title":"deltafish (development version)","text":"Fixed bug create_fish_db failed prior cache present without revision file. Adding download_method parameter create_fish_db help users download files given specific limitations","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/news/index.html","id":"deltafish-020","dir":"Changelog","previous_headings":"","what":"deltafish 0.2.0","title":"deltafish 0.2.0","text":"Add pkgdown website Implement EDI data package version checking specification withn create_fish_db Remove dependency duckdb add dependency arrow >= v8.0.0 Fix remove_unknown_lengths ignore 0-counts finding samples remove Change convert_lengths function longer collects full dataset Add tests mirror previously tested package LTMRdata Reconfigure internals internal functions can now read/write database specificed cache folder Added NEWS.md file track changes package.","code":""},{"path":"https://delta-stewardship-council.github.io/deltafish/news/index.html","id":"deltafish-010","dir":"Changelog","previous_headings":"","what":"deltafish 0.1.0","title":"deltafish 0.1.0","text":"Initialize package database EDI data publication","code":""}]
